name: Build, Push, and Deploy

on:
  push:
    tags: # Trigger pipeline on Git tags
      - '*'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Configure Docker daemon for insecure registry
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Configure Docker daemon for insecure registry
        run: |
          echo '{"insecure-registries": ["158.160.44.209:5000"]}' | sudo tee /etc/docker/daemon.json
          sudo systemctl restart docker

      # Step 3: Extract Git tag for image versioning
      - name: Extract Git tag
        id: get_tag
        run: echo "TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV
        
      - name: Convert repository name to lowercase
        id: get_lowercase_repo
        run: echo "REPO=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      # Step 4: Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t 158.160.44.209:5000/${{ env.REPO }}:${{ env.TAG }} .

      # Step 5: Push the Docker image
      - name: Push Docker image
        run: |
          docker push 158.160.44.209:5000/${{ env.REPO }}:${{ env.TAG }}

      # Step 6: Set up kubectl
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      # Step 7: Set up Helm
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.12.0'
      
      # Step 8: Check helm version
      - name: Verify Helm version
        run: helm version

      # Step 9: Set up kubeconfig for Kubernetes
      - name: Set up kubeconfig
        run: |
          echo "${{ secrets.KUBECONFIG }}" > kubeconfig
          export KUBECONFIG=$PWD/kubeconfig

      # Step: Debug API server connection
      - name: Debug API server connection
        run: curl -k https://89.169.140.22:6443/version
      
      # Step 10: Test config context
      - name: Verify Kubernetes connection
        run: kubectl get nodes
        env:
          KUBECONFIG: $PWD/kubeconfig

      # Step 11: Deploy to Kubernetes using Helm
      - name: Deploy application with Helm
        env:
          KUBECONFIG: $PWD/kubeconfig
        run: |
          helm upgrade --install my-app ./helm-chart \
            --set app.image.repository=158.160.44.209:5000/${{ env.REPO }} \
            --set app.image.tag=${{ env.TAG }} \
            --set app.service.type=LoadBalancer \
            --set app.service.port=4554 \
            --set app.service.externalIP=89.169.140.22